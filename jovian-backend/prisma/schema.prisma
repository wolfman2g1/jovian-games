// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id               String   @id @default(uuid()) @db.Uuid
  username         String   @unique
  email            String   @unique
  first_name       String   @db.VarChar(50)
  last_name        String   @db.VarChar(50)
  hashed_password  String
  role             Role     @default(USER)
  stripeCustomerId String?  // link to Stripe customer for billing
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Category {
  id         String  @id @default(uuid()) @db.Uuid
  name       String  @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  games      Game[]
}

model Developer {
  id         String  @id @default(uuid()) @db.Uuid
  name       String  @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  games      Game[]
}
model Genre {
  id         String  @id @default(uuid()) @db.Uuid
  name String @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  games      Game[]
}

model Game {
  id            String    @id @default(uuid()) @db.Uuid
  name          String    @unique
  description   String
  cpu           Int
  ram           Int
  price         Decimal
  image String
  category      Category  @relation(fields: [categoryId], references: [id])
  categoryId    String    @db.Uuid
  developer     Developer @relation(fields: [developerId], references: [id])
  developerId   String    @db.Uuid
  genre         Genre  @relation(fields: [genreId], references: [id])
  genreId       String   @db.Uuid
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
